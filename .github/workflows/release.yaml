name: Generate Artifacts
on:
  push:
    tags: [v*]

env:
  NODE_VERSION: 24

jobs:
  build-desktop:
    permissions:
      contents: write
    name: Build Desktop
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest'
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04'
            args: ''
          - platform: 'windows-latest'
            args: ''
    runs-on: ${{ matrix.platform }}
    timeout-minutes: 40
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Cache Rust
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            src-tauri/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Install OS-specific dependencies
        run: |
          if [[ $RUNNER_OS == 'Linux' ]]; then
            sudo apt-get update
            sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
          fi
        shell: bash

      - name: Install pnpm Dependencies
        run: pnpm install --frozen-lockfile

      - name: Set version
        run: pnpm run replace-version
        env:
          MV_VERSION: ${{ github.ref_name }}
          TARGET: desktop
      - uses: tauri-apps/tauri-action@dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          tagName: 'v__VERSION__'
          releaseName: 'Release __VERSION__'
          releaseBody: '[Changelog __VERSION__](https://github.com/humblepenguinn/mv/blob/main/CHANGELOG.md)'
          includeUpdaterJson: true
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}

  build-web:
    permissions:
      contents: write
    name: Build & Deploy Web
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Setup wasm32 target + wasm-pack
        run: |
          rustup target add wasm32-unknown-unknown
          cargo install wasm-pack

      - name: Build wasm package
        run: make build-wasm

      - name: Set version
        run: pnpm run replace-version
        env:
          MV_VERSION: ${{ github.ref_name }}
          TARGET: web

      - name: Build web app
        run: pnpm build

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
